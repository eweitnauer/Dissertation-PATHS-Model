// Copyright Erik Weitnauer 2014.
Circle=function(t,r,e){this.x=t;this.y=r;this.r=e};Circle.prototype.copy=function(){return new Circle(this.x,this.y,this.r)};Circle.prototype.centroid=function(){return new Point(this.x,this.y)};Circle.prototype.area=function(){return Math.PI*this.r*this.r};Circle.prototype.move_to_origin=function(){this.x=0;this.y=0};Circle.prototype.bounding_box=function(){return{x:this.x-this.r,y:this.y-this.r,width:2*this.r,height:2*this.r}};Circle.fromSVGCircle=function(t){var r=t.attributes;if(r.cx&&r.cy&&r.r){return new Circle(Number(r.cx.value),Number(r.cy.value),Number(r.r.value))}else return null};Circle.fromSVGPath=function(t){if(typeof exclude_ellipse=="undefined")exclude_ellipse=true;var r=t.lookupNamespaceURI("sodipodi");var e=function(e){return t.getAttributeNS(r,e)};var i,n,o,s;if(e("type")=="arc"&&(i=e("cx"))&&(n=e("cy"))&&(o=e("rx"))&&(s=e("ry"))){var a=e("start"),h=e("end");if(a&&h){var u=Math.abs(Number(a)-Number(h));u=Math.abs(u-2*Math.PI);if(u>.01){console.log("Warning: this is a circle segment! ||start-end|-2*PI| =",u);return null}}o=Number(o);s=Number(s);i=Number(i);n=Number(n);if(Math.abs(o/s-1)>.05){console.log("Warning: This is an ellipse! rx",o,"ry",s);return null}return new Circle(i,n,(o+s)/2)}return null};Circle.prototype.renderInSvg=function(t,r){var e=t.createElementNS("http://www.w3.org/2000/svg","circle");e.setAttribute("cx",this.x);e.setAttribute("cy",this.y);e.setAttribute("r",this.r);e.style.setProperty("stroke","red");e.style.setProperty("stroke-width",".5px");e.style.setProperty("fill","none");r.appendChild(e);return e};Circle.prototype.renderOnCanvas=function(t,r,e){t.beginPath();t.arc(this.x,this.y,this.r,0,2*Math.PI,true);if(r)t.stroke();if(e)t.fill()};function Matrix(t){var r=[];r.M=t?t.length:0;if(t){r.N=t[0].length;for(var e=0;e<t.length;e++){if(t[e].length!=r.N)throw"all rows must have the same length";if(t[e]instanceof Vector)r.push(t[e]);else r.push(new Vector(t[e]))}}else r.N=0;r.__proto__=Matrix.prototype;return r}Matrix.prototype=new Array;Matrix.construct=function(t,r,e){if(!e)e=0;var i=new Matrix;for(var n=0;n<t;n++)i.push(Vector.construct(r,e));i.M=t;i.N=r;return i};Matrix.random=function(t,r){var e=new Matrix;for(var i=0;i<t;i++)e.push(Vector.random(r));return e};Matrix.prototype.get=function(t,r){return this[t][r]};Matrix.prototype.Set=function(t,r,e){this[t][r]=e;return this};Matrix.prototype.mul=function(t){if(t instanceof Vector){if(this.N!=t.length)throw"dimension mismatch";var r=new Vector;for(var e=0;e<this.M;e++)r.push(this[e].mul(t));return r}else if(t instanceof Matrix){if(this.N!=t.M)throw"dimension mismatch";var r=Matrix.construct(this.M,t.N);for(var e=0;e<r.M;e++)for(var i=0;i<r.N;i++){for(var n=0;n<this.N;n++)r[e][i]+=this[e][n]*t[n][i]}return r}else throw"type mismatch"};Matrix.prototype.Sub=function(t){if(t.N!=this.N||t.M!=this.M)throw"dimension mismatch";for(var r=0;r<this.M;r++)this[r].Sub(t[r]);return this};Matrix.prototype.sub=function(t){if(t.N!=this.N||t.M!=this.M)throw"dimension mismatch";var r=new Matrix;for(var e=0;e<this.M;e++)r.push(this[e].sub(t[e]));r.M=t.M;r.N=t.N;return r};Matrix.prototype.Add=function(t){if(t.N!=this.N||t.M!=this.M)throw"dimension mismatch";for(var r=0;r<this.M;r++)this[r].Sub(t[r]);return this};Matrix.prototype.add=function(t){if(t.N!=this.N||t.M!=this.M)throw"dimension mismatch";var r=new Matrix;for(var e=0;e<this.M;e++)r.push(this[e].add(t[e]));r.M=t.M;r.N=t.N;return r};Matrix.prototype.max=function(){var t=-Infinity;for(var r=0;r<this.M;r++)t=Math.max(t,this[r].max());return t};Matrix.prototype.combine=function(t,r){if(t.N!=this.N||t.M!=this.M)throw"dimension mismatch";var e=Matrix.construct(this.M,this.N);for(var i=0;i<e.M;i++)for(var n=0;n<e.N;n++)e[i][n]=r(this[i][n],t[i][n]);return e};Matrix.prototype.map=function(t){var r=Matrix.construct(this.M,this.N);for(var e=0;e<r.M;e++)for(var i=0;i<r.N;i++)r[e][i]=t(this[e][i]);return r};Matrix.prototype.min=function(){var t=Infinity;for(var r=0;r<this.M;r++)t=Math.min(t,this[r].min());return t};Point=function(t,r){if(arguments.length==0){this.x=0;this.y=0}else if(arguments.length==1){this.x=t.x;this.y=t.y}else{this.x=t;this.y=r}};Point.norm_angle=function(t){t=t%(Math.PI*2);if(t<-Math.PI)t+=Math.PI*2;else if(t>Math.PI)t-=Math.PI*2;return t};Point.prototype.rotate=function(t){return new Point(this.x*Math.cos(t)-this.y*Math.sin(t),this.y*Math.cos(t)+this.x*Math.sin(t))};Point.prototype.Rotate=function(t){return this.Set(this.x*Math.cos(t)-this.y*Math.sin(t),this.y*Math.cos(t)+this.x*Math.sin(t))};Point.prototype.Set=function(t,r){if(arguments.length==1){this.x=t.x;this.y=t.y}else{this.x=t;this.y=r}return this};Point.prototype.dist=function(t){var r=this.x-t.x,e=this.y-t.y;return Math.sqrt(r*r+e*e)};Point.prototype.dist2=function(t){var r=this.x-t.x,e=this.y-t.y;return r*r+e*e};Point.len=function(t,r){return Math.sqrt(t*t+r*r)};Point.prototype.len=function(){return Math.sqrt(this.x*this.x+this.y*this.y)};Point.prototype.len2=function(){return this.x*this.x+this.y*this.y};Point.prototype.add=function(t){return new Point(this.x+t.x,this.y+t.y)};Point.prototype.Add=function(t){this.x+=t.x;this.y+=t.y;return this};Point.prototype.sub=function(t){return new Point(this.x-t.x,this.y-t.y)};Point.prototype.Sub=function(t){this.x-=t.x;this.y-=t.y;return this};Point.prototype.mul=function(t){return this.x*t.x+this.y*t.y};Point.prototype.cross=function(t){return this.x*t.y-this.y*t.x};Point.prototype.equals=function(t,r){return Math.abs(this.x-t.x)<=r&&Math.abs(this.y-t.y)<=r};Point.prototype.normalize=function(){var t=1/this.len();return new Point(this.x*t,this.y*t)};Point.prototype.Normalize=function(){var t=1/this.len();this.x*=t;this.y*=t;return this};Point.prototype.scale=function(t){return new Point(this.x*t,this.y*t)};Point.prototype.Scale=function(t){this.x*=t;this.y*=t;return this};Point.prototype.toString=function(){return"("+this.x+","+this.y+")"};Point.prototype.copy=function(){return new Point(this.x,this.y)};Point.EPS=1e-6;Point.get_closest_point_on_segment=function(t,r,e){var i=r.sub(t),n=i.len();if(n<Point.EPS)return t;var o=i.mul(e.sub(t))/n;if(o<0)return t;if(o>i.len())return r;return t.add(i.scale(o/n))};Point.intersect_ray_with_segment=function(t,r,e,i,n,o){if(typeof n=="undefined")var n=new Point;if(typeof o=="undefined")var o=Point.EPS;var s=i.sub(e);var a=r.cross(s);if(Math.abs(a)>Point.EPS){var h=e.sub(t).cross(r)/a;if(h<-o||h-1>o)return false;var u=e.add(s.scale(h));n.x=u.x;n.y=u.y}else{if(r.len2()<Point.EPS||s.len2()<Point.EPS)return false;var f=t.sub(e).mul(s)/s.mul(s);if(e.add(s.scale(f)).dist(t)>Point.EPS)return false;if(f<-o){n.x=e.x;n.y=e.y}else if(f-1>o){n.x=i.x;n.y=i.y}else{n.x=t.x;n.y=t.y}}if(n.sub(t).mul(r)>=0)return true;else return false};if(typeof exports!="undefined"){exports.Point=Point}Array.remove=function(t,r,e){var i=t.slice((e||r)+1||t.length);t.length=Math.max(0,r<0?t.length+r:r);for(var n=0;n<i.length;n++)t.push(i[n]);return t.length};Polygon=function(t){this.pts=[];this.closed=true;this.max_error=.2;if(t)this.add_points(t)};Polygon.prototype.copy=function(){var t=new Polygon;t.closed=this.closed;t.max_error=this.max_error;for(var r=0;r<this.pts.length;r++)t.pts.push(this.pts[r].copy());return t};Polygon.prototype.move_to_origin=function(){var t=this.pts.length;var r=this.centroid();for(var e=0;e<t;e++)this.pts[e].Sub(r)};Polygon.prototype.push=function(t){this.pts.push(t);return this.pts};Polygon.prototype.add_points=function(t){for(var r=0;r<t.length;++r)this.pts.push(new Point(t[r][0],t[r][1]))};Polygon.prototype.back=function(){return this.pts[this.pts.length-1]};Polygon.prototype.order_vertices=function(){if(this.area()<0)this.pts.reverse()};Polygon.prototype.bounding_box=function(){var t=this.pts[0].x,r=t,e=this.pts[0].y,i=e;for(var n=1;n<this.pts.length;n++){t=Math.min(t,this.pts[n].x);r=Math.max(r,this.pts[n].x);e=Math.min(e,this.pts[n].y);i=Math.max(i,this.pts[n].y)}return{x:t,y:e,width:r-t,height:i-e}};Polygon.prototype.area=function(){var t=0;var r=this.back();for(var e=0;e<this.pts.length;e++){t+=r.cross(this.pts[e]);r=this.pts[e]}return t*.5};Polygon.prototype.centroid=function(){var t=new Point(0,0);var r=this.pts.length;if(r===0)return t;var e=this.area();if(this.closed&&Math.abs(e)>=Point.EPS){var i=this.back();for(var n=0;n<r;++n){t=t.add(i.add(this.pts[n]).scale(i.cross(this.pts[n])));i=this.pts[n]}t=t.scale(1/(6*e))}else{var o=this.bounding_box();return new Point(o.x+o.width/2,o.y+o.height/2)}return t};Polygon.prototype.get_edge_lengths=function(t){var r=[],e=this.pts.length;for(var i=0;i<e-1;++i)r.push(this.pts[i].dist(this.pts[i+1]));if(this.closed&&e>1)r.push(this.pts[0].dist(this.pts[e-1]));if(t)r.sort(function(t,r){return t-r});return r};Polygon.prototype.is_convex=function(t){var r=this.pts.length;return this.pts[t].sub(this.pts[(t+r-1)%r]).cross(this.pts[(t+1)%r].sub(this.pts[t]))>=0};Polygon.prototype.find_notch=function(){var t=this.pts.length;for(var r=0;r<t;++r)if(!this.is_convex(r))return r;return t};Polygon.prototype.find_intersection=function(t,r,e,i,n){var o=this.pts.length;var s=o;if(typeof i=="undefined")var i=o;if(typeof n=="undefined")var n=o;if(typeof e=="undefined")var e=new Point;for(var a=0;a<o;++a){if(i<o&&(a==i||(o+a+1-i)%o==0))continue;if(n<o&&(a==n||(o+a+1-n)%o==0))continue;var h=new Point;if(Point.intersect_ray_with_segment(t,r,this.pts[(a+1)%o],this.pts[a],h)){if(s==o||h.dist2(t)<e.dist2(t)){e.x=h.x;e.y=h.y;s=a}}}return s};Polygon.prototype.is_visible=function(t,r){var e=this.pts.length;if(t==r||t==(r+1)%e||r==(t+1)%e)return true;var i=this.pts[(e+t-1)%e],n=this.pts[(t+1)%e];var o=this.pts[t].sub(i).cross(this.pts[r].sub(this.pts[t]))>=0;var s=n.sub(this.pts[t]).cross(this.pts[r].sub(n))>=0;if(this.is_convex(t)){if(!(o&&s))return false}else{if(!(o||s))return false}var a=new Point;var h=this.find_intersection(this.pts[t],this.pts[r].sub(this.pts[t]),a,t,r);if(h==e)return true;return a.dist2(this.pts[t])>this.pts[r].dist2(this.pts[t])};Polygon.prototype.split_at=function(t,r){var e=[new Polygon,new Polygon];var i=this.pts.length;for(var n=t;;++n){if(n==i)n=0;e[0].pts.push(this.pts[n].copy());if(n==r)break}for(var n=r;;++n){if(n==i)n=0;e[1].pts.push(this.pts[n].copy());if(n==t)break}return e};Polygon.prototype.split=function(t){if(t<3)return[];var r=this.pts.length;if(r<=t){return[this]}var e=this.find_biggest_angle();var i=(e+Math.round(r/2))%r;var n=this.split_at(e,i);var o=n[0].split(t);return o.concat(n[1].split(t))};Polygon.prototype.angle=function(t){var r=this.pts.length;var e=this.pts[(r+t-1)%r],i=this.pts[t],n=this.pts[(t+1)%r];var o=Math.acos(e.sub(i).normalize().mul(n.sub(i).normalize()));if(!this.is_convex(t))return 2*Math.PI-o;else return o};Polygon.prototype.find_biggest_angle=function(){var t=this.pts.length;var r;var e=t;for(var i=0;i<t;++i){var n=this.angle(i);if(e==t||r<n){e=i;r=n}}return e};Polygon.prototype.merge_vertices=function(t){if(t.min_dist==undefined)t.min_dist=Point.EPS;if(t.min_vertex_count==undefined)t.min_vertex_count=3;if(t.min_vertex_count<1)t.min_vertex_count=1;for(;;){var r=false;var e=this.pts.length;if(e<=t.min_vertex_count)return;var i=[];if(this.pts[0].dist(this.back())<t.min_dist){i.push(this.back().add(this.pts[0]).scale(.5));e-=1;r=true}else{i.push(this.pts[0])}for(var n=1;n<e;++n){if(i[i.length-1].dist(this.pts[n])<t.min_dist){i[i.length-1]=i[i.length-1].add(this.pts[n]).scale(.5);r=true}else i.push(this.pts[n])}if(r)this.pts=i;else return}};Polygon.prototype.remove_superfical_vertices=function(t){if(t.max_error==undefined)t.max_error=Point.EPS;if(t.min_vertex_count==undefined)t.min_vertex_count=3;if(t.min_vertex_count<3)t.min_vertex_count=3;for(;;){var r=false;var e=this.pts.length;var i=e-1;for(;;){if(e<=t.min_vertex_count)return;var n=this.pts[(e+i-1)%e],o=this.pts[(i+1)%e];var s=o.sub(n),a=s.normalize();var h=s.mul(this.pts[i].sub(n));var u;if(h>=0&&h<s.mul(s)){var f=n.add(a.scale(this.pts[i].sub(n).mul(a)));u=this.pts[i].dist(f)}else{if(h<0)u=this.pts[i].dist(n);else u=this.pts[i].dist(o)}if(u<=t.max_error){Array.remove(this.pts,i);e-=1;r=true}if(i==0)break;else i-=1}if(!r)return}};Polygon.prototype.toString=function(){var t=[];for(var r=0;r<this.pts.length;r++)t.push(this.pts[r].x+","+this.pts[r].y);return"("+t.join(" ")+")"};Polygon.fromSVGRect=function(t){var r=new Polygon;var e=Number(t.getAttribute("x")),i=Number(t.getAttribute("y")),n=Number(t.getAttribute("width")),o=Number(t.getAttribute("height"));r.add_points([[e,i],[e+n,i],[e+n,i+o],[e,i+o]]);r.order_vertices();return r};Polygon.fromSVGPath=function(t,r,e){var i=new Polygon;i.closed=false;i.max_error=r;var n=[];var o=t.pathSegList;for(var s=o.numberOfItems-1;s>=0;--s)n[s]=o.getItem(s);var a=new Point(0,0),h=null;for(var s=0;s<n.length;++s){var u=n[s];if(u.pathSegType==SVGPathSeg.PATHSEG_CLOSEPATH){i.closed=true;break}else{switch(u.pathSegType){case SVGPathSeg.PATHSEG_MOVETO_ABS:a=new Point(u.x,u.y);h=a;i.push(a);break;case SVGPathSeg.PATHSEG_MOVETO_REL:a=a.add(new Point(u.x,u.y));h=a;i.push(a);break;case SVGPathSeg.PATHSEG_LINETO_ABS:a=new Point(u.x,u.y);h=a;i.push(a);break;case SVGPathSeg.PATHSEG_LINETO_REL:a=a.add(new Point(u.x,u.y));h=a;i.push(a);break;case SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS:h=new Point(u.x2,u.y2);a=i.sampleBezier(a,new Point(u.x1,u.y1),h,new Point(u.x,u.y));break;case SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL:h=new Point(u.x2+a.x,u.y2+a.y);a=i.sampleBezier(a,new Point(u.x1+a.x,u.y1+a.y),h,new Point(u.x+a.x,u.y+a.y));break;case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:h=new Point(u.x1,u.y1);a=i.sampleBezier2(a,h,new Point(u.x,u.y));break;case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:h=new Point(u.x1+a.x,u.y1+a.y);a=i.sampleBezier2(a,h,new Point(u.x+a.x,u.y+a.y));break;case SVGPathSeg.PATHSEG_ARC_ABS:throw"not implemented!";case SVGPathSeg.PATHSEG_ARC_REL:throw"not implemented!";case SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:a=new Point(u.x,a.y);h=a;i.push(a);break;case SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:a=new Point(u.x+a.x,a.y);h=a;i.push(a);break;case SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS:a=new Point(a.x,u.y);h=a;i.push(a);break;case SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL:a=new Point(a.x,u.y+a.y);h=a;i.push(a);break;case SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:var f=new Point(2*a.x-h.x,2*a.y-h.y);h=new Point(u.x2,u.y2);a=i.sampleBezier(a,f,h,new Point(u.x,u.y));break;case SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:var f=new Point(2*a.x-h.x,2*a.y-h.y);h=new Point(u.x2+a.x,u.y2+a.y);a=i.sampleBezier(a,f,h,new Point(u.x+a.x,u.y+a.y));break;case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:h=new Point(2*a.x-h.x,2*a.y-h.y);a=i.sampleBezier2(a,h,new Point(u.x,u.y));break;case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:h=new Point(2*a.x-h.x,2*a.y-h.y);a=i.sampleBezier2(a,h,new Point(u.x+a.x,u.y+a.y));break;default:unknown=true;break}}}if(i.pts.length>1&&i.pts[0].equals(i.pts[i.pts.length-1],.001))i.closed=true;if(e)i.remove_superfical_vertices({max_error:.001});i.order_vertices();return i};Polygon.prototype.sampleBezier=function(t,r,e,i){var n=1e-6;if(this.max_error<=n)throw"max_error must be bigger than EPS";if(t.equals(r,n)&&t.equals(e,n)&&t.equals(i,n)){return}var o=0;var s=0;var a=i.sub(t);if(a.len()<n){a=r.dist(t)>r.dist(e)?r.sub(t):r.sub(e)}var h=new Point(-a.y,a.x);h.Normalize();var u=r.sub(t).mul(h);var f=e.sub(t).mul(h);var p=3*(u-f);var c=2*(f-2*u);var l=u;if(Math.abs(p)<n){o=.375*Math.abs(u+f);s=.5}else{var v=c*c-4*p*l;if(Math.abs(v)<n){var y=-.5*c/p;if(0<y&&y<1){o=3*Math.abs(u*(1-y)*(1-y)*y+f*(1-y)*y*y);s=y}}else if(v>0){var d=.5*(-c-Math.sqrt(v))/p;var g=.5*(-c+Math.sqrt(v))/p;var x=0,_=0;var m=0,b=0;if(0<d&&d<1){m=3*(u*(1-d)*(1-d)*d+f*(1-d)*d*d);x=Math.min(x,m);_=Math.max(_,m)}if(0<g&&g<1){b=3*(u*(1-g)*(1-g)*g+f*(1-g)*g*g);x=Math.min(x,b);_=Math.max(_,b)}o=_-x;s=Math.abs(m)>Math.abs(b)?d:g}else{}}if(o>this.max_error){var y=s;var M=t;var P=t.scale(1-y).add(r.scale(y));var S=t.scale((1-y)*(1-y)).add(r.scale(2*(1-y)*y)).add(e.scale(y*y));var w=t.scale((1-y)*(1-y)*(1-y)).add(r.scale(3*(1-y)*(1-y)*y)).add(e.scale(3*(1-y)*y*y)).add(i.scale(y*y*y));var N=w;var V=r.scale((1-y)*(1-y)).add(e.scale(2*(1-y)*y)).add(i.scale(y*y));var A=e.scale(1-y).add(i.scale(y));var E=i;this.sampleBezier(M,P,S,w);this.sampleBezier(N,V,A,E)}else{this.pts.push(i)}return i};Polygon.prototype.sampleBezier2=function(t,r,e){return this.sampleBezier(t,new Point((t.x+2*r.x)/3,(t.y+2*r.y)/3),new Point((2*r.x+e.x)/3,(2*r.y+e.y)/3),e)};Polygon.prototype.renderInSvg=function(t,r,e){if(arguments.length<3)var e=false;var i;if(this.closed)i=t.createElementNS("http://www.w3.org/2000/svg","polygon");else i=t.createElementNS("http://www.w3.org/2000/svg","polyline");var n=this.x||0,o=this.y||0;var s=[];for(var a=0;a<this.pts.length;++a)s.push(this.pts[a].x+n+","+(this.pts[a].y+o));i.setAttribute("points",s.join(" "));i.style.setProperty("stroke","red");i.style.setProperty("stroke-width",".5px");i.style.setProperty("fill","none");r.appendChild(i);if(e)for(var a=0;a<this.pts.length;++a){var h=e.cloneNode(true);h.setAttribute("cx",this.pts[a].x+n);h.setAttribute("cy",this.pts[a].y+o);r.appendChild(h)}return i};Polygon.prototype.renderOnCanvas=function(t,r,e){var i=this.x||0,n=this.y||0;t.beginPath();t.moveTo(this.pts[0].x+i,this.pts[0].y+n);for(var o=1;o<this.pts.length;o++)t.lineTo(this.pts[o].x+i,this.pts[o].y+n);if(this.closed)t.closePath();if(r)t.stroke();if(e)t.fill()};if(typeof exports!="undefined"){exports.Polygon=Polygon}Polygon.prototype.convex_decomposition=function(t,r){if(typeof r=="undefined")r=0;var e=[];if(t.debug_text){console.log("convex_decomposition on depth "+r+" called for "+this)}if(t.preprocess&&r==0){if(t.pre_order_vertices)this.order_vertices();if(t.pre_merge_vertices_min_dist>0)this.merge_vertices({min_dist:t.pre_merge_vertices_min_dist});if(t.pre_remove_vertices_max_error>0)this.remove_superfical_vertices({max_error:t.pre_remove_vertices_max_error});if(t.debug_text)console.log("after preprocessing: "+this)}var i=this.pts;var n=i.length;if(n<3)return[];var o=this.find_notch();if(t.debug_text)console.log("notch_idx is "+o);if(o<n){var s=i[(n+o-1)%n],a=i[o],h=i[(o+1)%n];var u=[];u=this.cd_strategy_1(o,t);if(u.length==0)u=this.cd_strategy_2(o,t);e=e.concat(u[0].convex_decomposition(t,r+1));e=e.concat(u[1].convex_decomposition(t,r+1))}else{if(t.max_vertices<n){if(t.debug_text)console.log("Too much vertices, splitting...");e=e.concat(this.split(t.max_vertices))}else{e.push(this)}}return e};Polygon.prototype.cd_strategy_1=function(t,r){if(r.debug_text)console.log("Applying strategy 1 to notch at "+t+"...");var e=this.pts;var i=e.length;var n=e[(i+t-1)%i],o=e[t],s=e[(t+1)%i],a=o.sub(n),h=n.sub(o),u=o.sub(s),f=s.sub(o);var p=i;for(var c=0;c<i;++c){if(c==t||(i+c-t-1)%i==0||(i+c-t+1)%i==0)continue;var l=e[c].sub(o);if(h.cross(l)*f.cross(l)>=0){if(r.debug_text)console.log("==> "+c+" is outside of the angle");continue}var v=Math.acos(h.normalize().mul(l.normalize()));var y=Math.acos(f.normalize().mul(l.normalize()));if(Math.abs(v)<r.s1_min_angle||Math.abs(y)<r.s1_min_angle){if(r.debug_text)console.log("==> "+c+" has angle < "+r.s1_min_angle*180/Math.PI+" deg with edges of vertex "+t);continue}if(!this.is_visible(t,c)){if(r.debug_text)console.log("==> "+c+" is not visible from "+t);continue}if(p==i||e[c].dist2(o)<e[p].dist2(o)){if(r.debug_text)console.log("==> "+c+" is new nearest split point");p=c}}if(p<i){if(r.debug_text)console.log("Strategy1 ==> using vertex "+p+" as splitting point.");return this.split_at(t,p)}else return[]};Polygon.prototype.cd_strategy_2=function(t,r){if(r.debug_text)console.log("Applying strategy 2 to notch at "+t+"...");var e=this.pts;var i=e.length;var n=e[(i+t-1)%i],o=e[t],s=e[(t+1)%i],a=o.sub(n),h=n.sub(o),u=o.sub(s),f=s.sub(o);var p,c=new Point,l=new Point;var v,y=this.find_intersection(o,a,c,(i+t-1)%i,t),d=this.find_intersection(o,u,l,(t+1)%i,t);if(o.dist2(c)<=o.dist2(l)){p=c;v=y}else{p=l;v=d}if(r.debug_text)console.log("==> the closest intersection found is "+p);if(r.debug_text)console.log("==> the vertex in front of it has the index "+v);var g=new Polygon;for(var x=t;;++x){if(x==i)x=0;g.pts.push(e[x].copy());if(x==v)break}g.pts.push(p.copy());var _=new Polygon;for(var x=v+1;;++x){if(x==i)x=0;if(x==t)break;_.pts.push(e[x].copy())}_.pts.push(p.copy());return[g,_]};var SpatialRelationAnalyzer=function(t,r,e,i,n){var o={};var s=o.res=t;o.scale=r;var a=2*Math.PI/180;function h(t,r){if(t==0&&r==0)return 0;else return Math.acos(t/Math.sqrt(t*t+r*r))}function u(t,r){if(t==0&&r==0)return 0;else return Math.acos(-t/Math.sqrt(t*t+r*r))}function f(t,r){if(t==0&&r==0)return 0;else return Math.acos(-r/Math.sqrt(t*t+r*r))}function p(t,r){if(t==0&&r==0)return 0;else return Math.acos(r/Math.sqrt(t*t+r*r))}function c(t){var r=2*Math.abs(t)/Math.PI-1;return Math.max(0,-r*r*r)}function l(t,r){return Math.sqrt(t*t+r*r)}function v(t){return 1-1/(1+Math.exp(30*(.2-t/s/r)))}function y(t){return 1/(1+Math.exp(20*(.35-t/s/r)))}o.beta_fs={right:h,left:u,above:f,below:p,near:l,far:l};o.member_fs={right:c,left:c,above:c,below:c,near:v,far:y};o.f_beta=i||o.beta_fs[e];o.f_member=n||o.member_fs[e];o.getMembership=function(t,e,i){var n=o.getSpatialMembershipMap(e),s=o.getBodyMatrix(t),a=r*(t.x-e.x),h=r*(t.y-e.y);var u=M(s,n,a,h);if(i){var f=o.debug_get_canvas("debug");o.debug_draw_A_R(s,n,f,a,h)}return u};var d=function(t,r,e){return r<=t&&t<=e};o.getSpatialMembershipMap=function(t){if(!t._spatial_maps)t._spatial_maps={};var r=t._spatial_maps[e];if(!r||r.res!=s||!d(r.rot,t.rot-a,t.rot+a)){r=t._spatial_maps[e]={res:s,rot:t.rot,data:b(o.getBodyMatrix(t),o.f_beta,o.f_member)}}return r.data};o.getBodyMatrix=function(t){var r=t._body_matrix;if(!r||r.res!=s||!d(r.rot,t.rot-a,t.rot+a)){r=t._body_matrix={res:s,rot:t.rot,data:g(t)}}return r.data};var g=o.calcBodyMatrix=function(t){var e=s,i=s;var n=t.bounding_box();if(Math.ceil(n.width*r)%2!=s%2)e=s-1;if(Math.ceil(n.height*r)%2!=s%2)i=s-1;var o=document.createElement("canvas");o.width=e;o.height=i;var a=o.getContext("2d");a.clearRect(0,0,o.width,o.height);a.fillStyle="black";a.translate(e/2,i/2);a.scale(r,r);if(t.rot!=0)a.rotate(t.rot);a.translate(-t.x||0,-t.y||0);t.renderOnCanvas(a,false,true);var h=x(o);if(h.bounding_box.x0>h.bounding_box.x1)h[Math.floor(i/2)][Math.floor(e/2)]=1;return h};var x=function(t){var r=t.width,e=t.height;var i=t.getContext("2d").getImageData(0,0,r,e).data;var n=Matrix.construct(e,r,0);var o=r,s=0,a=e,h=0;for(var u=0;u<e;u++)for(var f=0;f<r;f++){if(i[4*(u*r+f)+3]>0){n[u][f]=1;o=Math.min(o,f);s=Math.max(s,f);a=Math.min(a,u);h=Math.max(h,u)}}n.bounding_box={x0:o,y0:a,x1:s,y1:h};return n};var _=o.calcSpatialMembershipMapAccurate=function(t,r,e){var i=t.N,n=t.M;var o=0,s=0,a=t.N-1,h=t.M-1;if(t.bounding_box){var u=t.bounding_box;o=u.x0;a=u.x1;s=u.y0;h=u.y1}var f=Matrix.construct(n,i,Infinity);for(var p=0;p<n;p++)for(var c=0;c<i;c++){if(t[p][c]==1)f[p][c]=NaN;else{for(var l=s;l<=h;l++)for(var v=o;v<=a;v++){if(t[l][v]!=1)continue;f[p][c]=Math.min(f[p][c],r(c-v,p-l))}}}f=f.map(e);return f};var m=o.calcSpatialMembershipMapFast=function(t,r,e){var i=t.N,n=t.M;var o=Matrix.construct(n,i);for(var s=0;s<n;s++)for(var a=0;a<i;a++){if(t[s][a]==1)o[s][a]=[s,a,0]}var h=function(t,e){var s=o[t][e];var a=function(i){var n=r(e-i[1],t-i[0]);if(s==0||n<=s[2]){s=[i[0],i[1],n]}};if(t>0){if(e>0&&o[t-1][e-1])a(o[t-1][e-1]);if(o[t-1][e])a(o[t-1][e]);if(e<i-1&&o[t-1][e+1])a(o[t-1][e+1])}if(t<n-1){if(e>0&&o[t+1][e-1])a(o[t+1][e-1]);if(o[t+1][e])a(o[t+1][e]);if(e<i-1&&o[t+1][e+1])a(o[t+1][e+1])}if(e>0&&o[t][e-1])a(o[t][e-1]);if(e<i-1&&o[t][e+1])a(o[t][e+1]);o[t][e]=s};for(var s=0;s<n;s++)for(var a=0;a<i;a++)h(s,a);for(var s=n-1;s>=0;s--)for(var a=i-1;a>=0;a--)h(s,a);for(var s=0;s<n;s++)for(var a=0;a<i;a++){if(t[s][a]==1)o[s][a]=NaN;else if(o[s][a])o[s][a]=e(o[s][a][2]);else o[s][a]=NaN}return o};var b=o.calcSpatialMembershipMapFaster=function(t,r,e){var i=t.N,n=t.N-1,o=t.M,s=t.M-1;var a=Matrix.construct(o,i,0);for(var h=0;h<o;h++)for(var u=0;u<i;u++){a[h][u]=t[h][u]==1?[h,u,0]:[-1,-1,Infinity]}var f=function(t,e,i,o){var h=a[t][e];var u=false;var f=function(i){if(i[0]==-1)return;var n=r(e-i[1],t-i[0]);if(n<h[2]){h[0]=i[0];h[1]=i[1];h[2]=n;u=true}};if(i&&e>0)f(a[t][e-1]);if(!i&&e<n)f(a[t][e+1]);if(o&&t>0)f(a[t-1][e]);if(!o&&t<s)f(a[t+1][e]);if(i&&o&&e>0&&t>0)f(a[t-1][e-1]);if(i&&!o&&e>0&&t<s)f(a[t+1][e-1]);if(!i&&o&&e<n&&t>0)f(a[t-1][e+1]);if(!i&&!o&&e<n&&t<s)f(a[t+1][e+1]);if(u)a[t][e]=h};var p=t.bounding_box?Math.max(0,t.bounding_box.y0):0;var c=t.bounding_box?Math.max(0,t.bounding_box.x0):0;var l=t.bounding_box?Math.max(0,t.bounding_box.y1):s;var v=t.bounding_box?Math.max(0,t.bounding_box.x1):n;for(var h=p;h<o;h++)for(var u=c;u<i;u++)f(h,u,true,true);for(var h=p;h<o;h++)for(var u=v;u>=0;u--)f(h,u,false,true);for(var h=l;h>=0;h--)for(var u=c;u<i;u++)f(h,u,true,false);for(var h=l;h>=0;h--)for(var u=v;u>=0;u--)f(h,u,false,false);for(var h=0;h<o;h++)for(var u=0;u<i;u++){if(t[h][u]==1)a[h][u]=NaN;else if(a[h][u][2]!=Infinity)a[h][u]=e(a[h][u][2]);else a[h][u]=NaN}return a};var M=o.calcObjectMembership=function(t,r,e,i){var n=null;var o=0;var s=null;var a=0,h=0,u=t.N,f=t.M;if(t.bounding_box){var p=t.bounding_box;a=p.x0;u=p.x1;h=p.y0;f=p.y1}var c=0;for(var l=h;l<=f;l++)for(var v=a;v<=u;v++){if(!t[l][v])continue;var y=Math.round(l+i),d=Math.round(v+e);if(y>=r.M||y<0)continue;if(d>=r.N||d<0)continue;var g=r[y][d];if(isNaN(g))continue;s=s===null?g:Math.min(s,g);o+=g;c++;n=n===null?g:Math.max(n,g)}o/=c;return[s,o,n]};o.debug_get_canvas=function(t,r,e,i){e=e||200;i=i||200;var n=d3.select("canvas#"+t);if(n.empty()){var o=d3.select("body").append("div").classed("debug-can-div",true).style("text-align","center");n=o.append("canvas").attr("id",t);if(r){o.append("br");o.append("span").text(r)}}n.attr("width",e).attr("height",i);n[0][0].getContext("2d").clearRect(0,0,e,i);return n[0][0]};o.debug_draw_matrix=function(t,r,e,i,n){e=e||"white";i=i||0;n=n||0;i=Math.round(i);n=Math.round(n);var o=t.N,s=t.M;var a=Math.min(r.width/o,r.height/s);var h=r.getContext("2d");for(var u=0;u<t.M;u++)for(var f=0;f<t.N;f++){var p;if(isNaN(t[u][f])){p="red";h.globalAlpha=1}else{p=e;h.globalAlpha=t[u][f]>0?t[u][f]:0}h.fillStyle=p;var c=Math.round((f+i)*a),l=Math.round((u+n)*a),v=Math.round((f+1+i)*a),y=Math.round((u+1+n)*a);h.fillRect(c,l,v-c,y-l)}};o.debug_draw_A_R=function(t,r,e,i,n){var s=e.getContext("2d");s.fillStyle="black";s.fillRect(0,0,e.width,e.height);if(r)o.debug_draw_matrix(r,e);if(t)o.debug_draw_matrix(t,e,"rgba(0,0,255,0.5)",i,n)};return o};SpatialRelationAnalyzer.conjunction=function(t,r){return t.combine(r,function(t,r){return Math.min(t,r)})};SpatialRelationAnalyzer.disjunction=function(t,r){return t.combine(r,function(t,r){return Math.max(t,r)})};SpatialRelationAnalyzer.subtract=function(t,r){return t.combine(r,function(t,r){return Math.max(0,t-r)})};function Vector(t){if(t instanceof Vector)return t.copy();var r=[];if(t&&t!=[])for(var e=0;e<t.length;e++)r.push(t[e]);r.__proto__=Vector.prototype;return r}Vector.prototype=new Array;Vector.prototype.has_index=function(t){return this.hasOwnProperty(t)};Vector.construct=function(t,r){if(!r)r=0;var e=new Vector;for(var i=0;i<t;i++)e.push(r);return e};Vector.random=function(t){var r=new Vector;for(var e=0;e<t;e++)r.push(Math.random());return r};Vector.prototype.copy=function(){var t=new Vector;for(var r=0;r<this.length;r++){t.push(this[r])}return t};Vector.prototype.add=function(t){if(this.length!=t.length)throw"dimension mismatch";var r=new Vector;for(var e=0;e<this.length;e++)r[e]=this[e]+t[e];return r};Vector.prototype.Add=function(t){if(this.length!=t.length)throw"dimension mismatch";for(var r=0;r<this.length;r++)this[r]+=t[r];return this};Vector.prototype.sub=function(t){if(this.length!=t.length)throw"dimension mismatch";var r=new Vector;for(var e=0;e<this.length;e++)r[e]=this[e]-t[e];return r};Vector.prototype.Sub=function(t){if(this.length!=t.length)throw"dimension mismatch";for(var r=0;r<this.length;r++)this[r]-=t[r];return this};Vector.prototype.len=function(){var t=0;for(var r=0;r<this.length;r++)t+=this[r]*this[r];return Math.sqrt(t)};Vector.prototype.len2=function(){var t=0;for(var r=0;r<this.length;r++)t+=this[r]*this[r];return t};Vector.prototype.scale=function(t){var r=new Vector;for(var e=0;e<this.length;e++)r.push(this[e]*t);return r};Vector.prototype.Scale=function(t){for(var r=0;r<this.length;r++)this[r]*=t;return this};Vector.prototype.normalize=function(){var t=1/this.len();return this.scale(t)};Vector.prototype.Normalize=function(){var t=1/this.len();return this.Scale(t)};Vector.prototype.mul=function(t){if(this.length!=t.length)throw"dimension mismatch";var r=0;for(var e=0;e<this.length;e++)r+=this[e]*t[e];return r};Vector.prototype.max=function(){var t=-Infinity;for(var r=0;r<this.length;r++)t=Math.max(t,this[r]);return t};Vector.prototype.min=function(){var t=Infinity;for(var r=0;r<this.length;r++)t=Math.min(t,this[r]);return t};if(typeof exports!="undefined"){exports.Vector=Vector}function SparseVector(t){var r=[];r.N=t||0;r.__proto__=SparseVector.prototype;r.el={};return r}SparseVector.prototype=new Array;SparseVector.prototype.has_index=function(t){return this.hasOwnProperty(t)&&t!="N"};SparseVector.prototype.copy=function(){var t=new SparseVector;t.N=this.N;for(var r in this)if(this.hasOwnProperty(r))t[r]=this[r];return t};SparseVector.prototype.get=function(t){return t in this?this[t]:0};SparseVector.prototype.add=function(t){if(!(t instanceof SparseVector))throw"no mixing of sparse and non sparse vectors!";if(this.N!=t.N)throw"Can only add vectors of same length";var r=this.copy();for(var e in t)if(t.has_index(e))r[e]=(r[e]||0)+t[e];return r};SparseVector.prototype.Add=function(t){if(!(t instanceof SparseVector))throw"no mixing of sparse and non sparse vectors!";if(this.N!=t.N)throw"Can only add vectors of same length";for(var r in t)if(t.has_index(r))this[r]=(this[r]||0)+t[r];return this};SparseVector.prototype.sub=function(t){if(!(t instanceof SparseVector))throw"no mixing of sparse and non sparse vectors!";if(this.N!=t.N)throw"Can only add vectors of same length";var r=this.copy();for(var e in t)if(t.has_index(e))r[e]=(r[e]||0)-t[e];return r};SparseVector.prototype.Sub=function(t){if(!(t instanceof SparseVector))throw"no mixing of sparse and non sparse vectors!";if(this.N!=t.N)throw"Can only add vectors of same length";for(var r in t)if(t.has_index(r))this[r]=(this[r]||0)-t[r];return this};SparseVector.prototype.len=function(){var t=0;for(var r in this)if(this.has_index(r))t+=this[r]*this[r];return Math.sqrt(t)};SparseVector.prototype.len2=function(){var t=0;for(var r in this)if(this.has_index(r))t+=this[r]*this[r];return t};SparseVector.prototype.scale=function(t){var r=this.copy();for(var e in r)if(r.has_index(e))r[e]*=t;return r};SparseVector.prototype.Scale=function(t){for(var r in this)if(v.has_index(r))this[r]*=t;return this};SparseVector.prototype.normalize=function(){var t=1/this.len();return this.scale(t)};SparseVector.prototype.Normalize=function(){var t=1/this.len();return this.Scale(t)};SparseVector.prototype.mul=function(t){var r=0;var e=t instanceof SparseVector?t.N:t.length;if(this.N!=e)throw"Can only mul vectors of same length";for(var i in this.el)r+=this.el[i]*t[i];return r};function SparseMatrix(t,r){this.N=r||0;this.M=t||0;this.i=[];this.j=[];this.v=[]}SparseMatrix.prototype.get=function(t,r){for(var e=0;e<this.i.length;e++){if(this.i[e]==t&&this.j[e]==r)return this.v[e]}return 0};SparseMatrix.prototype.Set=function(t,r,e){this.i.push(t);this.j.push(r);this.v.push(e);return this};SparseMatrix.prototype.mul=function(t){if(this.N!=t.length)throw"dimensions do not match, SparseMatrix-Vector multiplication not possible";var r=Vector.construct(t.length,0);for(var e=0;e<this.i.length;e++)r[this.i[e]]+=this.v[e]*t[this.j[e]];return r};function SparseMatrixCRS(t){this.M=t.M;this.N=t.N;this.j=[];this.v=[];this.rp=[];var r=Array(this.M);var e=Array(this.M);for(var i=0;i<this.M;i++){r[i]=[];e[i]=[]}for(var i=0;i<t.i.length;i++){r[t.i[i]].push(t.j[i]);e[t.i[i]].push(t.v[i])}var n=0;this.rp.push(n);for(var i=0;i<this.M;i++){this.j=this.j.concat(r[i]);
this.v=this.v.concat(e[i]);n+=r[i].length;this.rp.push(n)}}SparseMatrixCRS.prototype.mul=function(t){if(this.N!=t.length)throw"dimensions do not match, SparseMatrix-Vector multiplication not possible";var r=Vector.construct(t.length,0);for(var e=0;e<this.M;e++)for(var i=this.rp[e];i<this.rp[e+1];i++)r[e]+=this.v[i]*t[this.j[i]];return r};